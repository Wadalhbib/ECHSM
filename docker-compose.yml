version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: ai-ochsms-postgres
    environment:
      POSTGRES_DB: ai_ochsms
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ai-ochsms-network

  redis:
    image: redis:7-alpine
    container_name: ai-ochsms-redis
    ports:
      - "6379:6379"
    networks:
      - ai-ochsms-network

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: ai-ochsms-server
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=ai_ochsms
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - OPENAI_API_KEY=your-openai-api-key
    depends_on:
      - postgres
      - redis
    volumes:
      - ./server:/app
      - server_node_modules:/app/node_modules
    networks:
      - ai-ochsms-network

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: ai-ochsms-client
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:5000/api
      - VITE_SOCKET_URL=http://localhost:5000
    depends_on:
      - server
    volumes:
      - ./client:/app
      - client_node_modules:/app/node_modules
    networks:
      - ai-ochsms-network

volumes:
  postgres_data:
  server_node_modules:
  client_node_modules:

networks:
  ai-ochsms-network:
    driver: bridge